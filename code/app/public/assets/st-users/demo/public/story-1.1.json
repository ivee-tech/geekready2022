{
  "container": {
    "name": "mainGroup",
    "uuid": "",
    "url": "",
    "meshType": "group",
    "objectProps": [],
    "geometryProps": [],
    "materialProps": [],
    "cfgProps": [],
    "children": [
      {
        "name": "",
        "uuid": "DCD7B477-30CD-4726-A3EB-9CFDCC698F60",
        "meshType": "cube",
        "objectProps": [
          {
            "prop1": "",
            "prop2": "name",
            "type": "string",
            "label": "Name",
            "value": ""
          },
          {
            "prop1": "",
            "prop2": "uuid",
            "type": "string",
            "label": "UUID",
            "value": "DCD7B477-30CD-4726-A3EB-9CFDCC698F60",
            "readOnly": true
          },
          {
            "prop1": "position",
            "prop2": "x",
            "type": "number",
            "label": "Position X",
            "min": -1000,
            "max": 1000,
            "value": -257.3186264218318,
            "step": 10
          },
          {
            "prop1": "position",
            "prop2": "y",
            "type": "number",
            "label": "Position Y",
            "min": -1000,
            "max": 1000,
            "value": 151.91546389372354,
            "step": 10
          },
          {
            "prop1": "position",
            "prop2": "z",
            "type": "number",
            "label": "Position Z",
            "min": -1000,
            "max": 1000,
            "value": 235.68183371006862,
            "step": 10
          },
          {
            "prop1": "rotation",
            "prop2": "x",
            "type": "number",
            "label": "Rotation X",
            "min": -1000,
            "max": 1000,
            "value": 0,
            "step": 10
          },
          {
            "prop1": "rotation",
            "prop2": "y",
            "type": "number",
            "label": "Rotation Y",
            "min": -1000,
            "max": 1000,
            "value": 0,
            "step": 10
          },
          {
            "prop1": "rotation",
            "prop2": "z",
            "type": "number",
            "label": "Rotation Z",
            "min": -1000,
            "max": 1000,
            "value": 0,
            "step": 10
          },
          {
            "prop1": "scale",
            "prop2": "x",
            "type": "number",
            "label": "Scale X",
            "min": -10,
            "max": 10,
            "value": 1,
            "step": 1
          },
          {
            "prop1": "scale",
            "prop2": "y",
            "type": "number",
            "label": "Scale Y",
            "min": -10,
            "max": 10,
            "value": 1,
            "step": 1
          },
          {
            "prop1": "scale",
            "prop2": "z",
            "type": "number",
            "label": "Scale Z",
            "min": -10,
            "max": 10,
            "value": 1,
            "step": 1
          }
        ],
        "geometryProps": [
          {
            "prop1": null,
            "prop2": "type",
            "type": "enum",
            "label": "Type",
            "value": "BoxGeometry",
            "readOnly": true
          },
          {
            "prop1": null,
            "prop2": "width",
            "type": "number",
            "label": "Width",
            "min": 0,
            "max": 1000,
            "value": 100,
            "step": 10
          },
          {
            "prop1": null,
            "prop2": "height",
            "type": "number",
            "label": "Height",
            "min": 0,
            "max": 1000,
            "value": 100,
            "step": 10
          },
          {
            "prop1": null,
            "prop2": "depth",
            "type": "number",
            "label": "Depth",
            "min": 0,
            "max": 1000,
            "value": 100,
            "step": 10
          },
          {
            "prop1": null,
            "prop2": "widthSegments",
            "type": "number",
            "label": "Width Segments",
            "min": 1,
            "max": 100,
            "value": 1,
            "step": 10
          },
          {
            "prop1": null,
            "prop2": "heightSegments",
            "type": "number",
            "label": "Height Segments",
            "min": 1,
            "max": 100,
            "value": 1,
            "step": 10
          },
          {
            "prop1": null,
            "prop2": "depthSegments",
            "type": "number",
            "label": "Depth Segments",
            "min": 1,
            "max": 100,
            "value": 1,
            "step": 10
          }
        ],
        "materialProps": [
          {
            "prop1": "material",
            "prop2": "type",
            "type": "object",
            "label": "Type",
            "value": "MeshBasicMaterial",
            "values": [ "LineBasicMaterial", "LineDashedMaterial", "MeshBasicMaterial", "MeshDepthMaterial", "MeshLambertMaterial", "MeshPhongMaterial", "MeshStandardMaterial", "MeshToonMaterial", "PointsMaterial" ]
          },
          {
            "prop1": "material",
            "prop2": "color",
            "type": "color",
            "label": "Color",
            "value": "#ffffff"
          },
          {
            "prop1": "material",
            "prop2": "specular",
            "type": "color",
            "label": "Specular",
            "value": "#111111"
          },
          {
            "prop1": "material",
            "prop2": "wireframe",
            "type": "boolean",
            "label": "Wireframe",
            "value": false
          },
          {
            "prop1": "material",
            "prop2": "transparent",
            "type": "boolean",
            "label": "Transparent",
            "value": true
          },
          {
            "prop1": "material",
            "prop2": "opacity",
            "type": "number",
            "label": "Opacity",
            "min": 0,
            "max": 1,
            "value": 1,
            "step": 0.05
          },
          {
            "prop1": "material",
            "prop2": "texture",
            "type": "map",
            "label": "MapTexture",
            "value": "images/762448949414527671.jpg"
          },
          {
            "prop1": "material",
            "prop2": "select",
            "type": "map",
            "label": "Select"
          },
          {
            "prop1": "material",
            "prop2": "refresh",
            "type": "map",
            "label": "Refresh"
          }
        ],
        "cfgProps": [ ],
        "children": [ ],
        "contentPanels": "data-binding"
      },
      {
        "name": "",
        "uuid": "98AA7291-99A2-487A-8E47-3FB36B6020E3",
        "geometryType": "",
        "meshType": "sphere",
        "objectProps": [
          {
            "prop1": "",
            "prop2": "name",
            "type": "string",
            "label": "Name",
            "value": ""
          },
          {
            "prop1": "",
            "prop2": "uuid",
            "type": "string",
            "label": "UUID",
            "value": "98AA7291-99A2-487A-8E47-3FB36B6020E3",
            "readOnly": true
          },
          {
            "prop1": "position",
            "prop2": "x",
            "type": "number",
            "label": "Position X",
            "min": -1000,
            "max": 1000,
            "value": 103.97176902244712,
            "step": 10
          },
          {
            "prop1": "position",
            "prop2": "y",
            "type": "number",
            "label": "Position Y",
            "min": -1000,
            "max": 1000,
            "value": 258.20265436034003,
            "step": 10
          },
          {
            "prop1": "position",
            "prop2": "z",
            "type": "number",
            "label": "Position Z",
            "min": -1000,
            "max": 1000,
            "value": -118.54391731053508,
            "step": 10
          },
          {
            "prop1": "rotation",
            "prop2": "x",
            "type": "number",
            "label": "Rotation X",
            "min": -1000,
            "max": 1000,
            "value": 0,
            "step": 10
          },
          {
            "prop1": "rotation",
            "prop2": "y",
            "type": "number",
            "label": "Rotation Y",
            "min": -1000,
            "max": 1000,
            "value": 0,
            "step": 10
          },
          {
            "prop1": "rotation",
            "prop2": "z",
            "type": "number",
            "label": "Rotation Z",
            "min": -1000,
            "max": 1000,
            "value": 0,
            "step": 10
          },
          {
            "prop1": "scale",
            "prop2": "x",
            "type": "number",
            "label": "Scale X",
            "min": -10,
            "max": 10,
            "value": 1,
            "step": 1
          },
          {
            "prop1": "scale",
            "prop2": "y",
            "type": "number",
            "label": "Scale Y",
            "min": -10,
            "max": 10,
            "value": 1,
            "step": 1
          },
          {
            "prop1": "scale",
            "prop2": "z",
            "type": "number",
            "label": "Scale Z",
            "min": -10,
            "max": 10,
            "value": 1,
            "step": 1
          },
          {
            "prop1": null,
            "prop2": "url",
            "type": "string",
            "label": "Url",
            "value": ""
          },
          {
            "prop1": null,
            "prop2": "visible",
            "type": "boolean",
            "label": "Visible",
            "value": false
          },
          {
            "prop1": null,
            "prop2": "visibleRuntime",
            "type": "boolean",
            "label": "Runtime",
            "value": false
          },
          {
            "prop1": null,
            "prop2": "sVisibleRuntime",
            "type": "string",
            "label": "SRuntime",
            "hidden": true,
            "value": "false"
          }
        ],
        "geometryProps": [
          {
            "prop1": null,
            "prop2": "type",
            "type": "enum",
            "label": "Type",
            "value": "SphereGeometry"
          },
          {
            "prop1": null,
            "prop2": "radius",
            "type": "number",
            "label": "Radius",
            "min": 1,
            "max": 1000,
            "value": 50,
            "step": 10
          },
          {
            "prop1": null,
            "prop2": "widthSegments",
            "type": "number",
            "label": "Width Segments",
            "min": 3,
            "max": 1000,
            "value": 20,
            "step": 10
          },
          {
            "prop1": null,
            "prop2": "heightSegments",
            "type": "number",
            "label": "Height Segments",
            "min": 2,
            "max": 1000,
            "value": 20,
            "step": 10
          },
          {
            "prop1": null,
            "prop2": "phiStart",
            "type": "number",
            "label": "Phi Start",
            "min": 0,
            "max": 6.2831853071795862,
            "value": 0,
            "step": 0.1,
            "deg": true
          },
          {
            "prop1": null,
            "prop2": "phiLength",
            "type": "number",
            "label": "Phi Start",
            "min": 0,
            "max": 6.2831853071795862,
            "value": 6.2831853071795862,
            "step": 0.1,
            "deg": true
          },
          {
            "prop1": null,
            "prop2": "thetaStart",
            "type": "number",
            "label": "Theta Start",
            "min": 0,
            "max": 6.2831853071795862,
            "value": 0,
            "step": 0.1,
            "deg": true
          },
          {
            "prop1": null,
            "prop2": "thetaLength",
            "type": "number",
            "label": "Theta Start",
            "min": 0,
            "max": 6.2831853071795862,
            "value": 6.2831853071795862,
            "step": 0.1,
            "deg": true
          }
        ],
        "materialProps": [
          {
            "prop1": "material",
            "prop2": "type",
            "type": "object",
            "label": "Type",
            "value": "MeshPhongMaterial",
            "values": [
              "LineBasicMaterial",
              "LineDashedMaterial",
              "MeshBasicMaterial",
              "MeshDepthMaterial",
              "MeshLambertMaterial",
              "MeshPhongMaterial",
              "MeshStandardMaterial",
              "MeshToonMaterial",
              "PointsMaterial"
            ]
          },
          {
            "prop1": "material",
            "prop2": "color",
            "type": "color",
            "label": "Color",
            "value": {
              "r": 47.058823529411768,
              "g": 77.3356401384083,
              "b": 150
            }
          },
          {
            "prop1": "material",
            "prop2": "specular",
            "type": "color",
            "label": "Specular",
            "value": "#111111"
          },
          {
            "prop1": "material",
            "prop2": "wireframe",
            "type": "boolean",
            "label": "Wireframe",
            "value": false
          },
          {
            "prop1": "material",
            "prop2": "transparent",
            "type": "boolean",
            "label": "Transparent",
            "value": false
          },
          {
            "prop1": "material",
            "prop2": "opacity",
            "type": "number",
            "label": "Opacity",
            "min": 0,
            "max": 1,
            "value": 1,
            "step": 0.05
          },
          {
            "prop1": "material",
            "prop2": "map",
            "type": "map",
            "label": "Map",
            "value": null
          },
          {
            "prop1": "material",
            "prop2": "map",
            "type": "function",
            "label": "--Select map texture"
          },
          {
            "prop1": "material",
            "prop2": "map",
            "type": "function",
            "label": "--Refresh map texture"
          }
        ],
        "cfgProps": [],
        "children": []
      }
    ]
  },
  "timelines": [
    {
      "name": "T0",
      "cameraPositionDisplacement": {
        "displacement": {
          "x": 0.5,
          "y": 0.5,
          "z": 0
        },
        "min": {
          "x": -1000,
          "y": -1000,
          "z": 0
        },
        "max": {
          "x": 1000,
          "y": 1000,
          "z": 0
        },
        "enabled": true,
        "expression": {
          "x": 0,
          "y": 0,
          "z": 0,
          "fnx": null,
          "fny": null,
          "fnz": null
        }
      },
      "enabled": false,
      "meshes": []
    },
    {
      "name": "T1",
      "enabled": true,
      "duration": 10,
      "meshes": [
        {
          "scaleDisplacement": {
            "displacement": {
              "x": 0.01,
              "y": 0.01,
              "z": 0.01
            },
            "min": {
              "x": -10,
              "y": -10,
              "z": -10
            },
            "max": {
              "x": 10,
              "y": 10,
              "z": 10
            },
            "enabled": true
          },
          "uuid": "DCD7B477-30CD-4726-A3EB-9CFDCC698F60"
        }
      ],
      "contentPanels": "intro"
    },
    {
      "name": "T2",
      "enabled": true,
      "duration": 10,
      "meshes": [
        {
          "rotationDisplacement": {
            "displacement": {
              "x": 0.01,
              "y": 0.01,
              "z": 0.01
            },
            "min": {
              "x": -10,
              "y": -10,
              "z": -10
            },
            "max": {
              "x": 10,
              "y": 10,
              "z": 10
            },
            "enabled": true
          },
          "uuid": "DCD7B477-30CD-4726-A3EB-9CFDCC698F60"
        }
      ]
    },
    {
      "name": "T3",
      "enabled": true,
      "duration": 10,
      "meshes": [
        {
          "positionDisplacement": {
            "displacement": {
              "x": 10,
              "y": 10,
              "z": 0
            },
            "min": {
              "x": -1000,
              "y": -1000,
              "z": -0
            },
            "max": {
              "x": 1000,
              "y": 1000,
              "z": 0
            },
            "enabled": true
          },
          "uuid": "98AA7291-99A2-487A-8E47-3FB36B6020E3"
        }
      ],
      "contentPanels": "data-binding"
    }
  ],
  "lights": [
    {
      "name": "",
      "uuid": "49653B46-A8B1-46A5-AA54-640CEA52E398",
      "type": "DirectionalLight",
      "lightProps": [
        {
          "prop1": null,
          "prop2": "type",
          "type": "string",
          "label": "Type",
          "value": "DirectionalLight",
          "readOnly": true
        },
        {
          "prop1": null,
          "prop2": "uuid",
          "type": "string",
          "label": "UUID",
          "value": "",
          "readOnly": true
        },
        {
          "prop1": null,
          "prop2": "name",
          "type": "string",
          "label": "name",
          "value": ""
        },
        {
          "prop1": null,
          "prop2": "color",
          "type": "color",
          "label": "Color",
          "value": 16777215
        },
        {
          "prop1": null,
          "prop2": "intensity",
          "type": "number",
          "label": "Intensity",
          "value": 1,
          "min": 0,
          "max": 1,
          "step": 0.05
        },
        {
          "prop1": "position",
          "prop2": "x",
          "type": "number",
          "label": "Position X",
          "min": -1000,
          "max": 1000,
          "value": 1000,
          "step": 10
        },
        {
          "prop1": "position",
          "prop2": "y",
          "type": "number",
          "label": "Position Y",
          "min": -1000,
          "max": 1000,
          "value": 1000,
          "step": 10
        },
        {
          "prop1": "position",
          "prop2": "z",
          "type": "number",
          "label": "Position Z",
          "min": -1000,
          "max": 1000,
          "value": 1000,
          "step": 10
        },
        {
          "prop1": null,
          "prop2": "size",
          "type": "number",
          "label": "Size",
          "min": 1,
          "max": 100,
          "value": 5,
          "step": 1
        },
        {
          "prop1": null,
          "prop2": "shadowCameraFov",
          "type": "number",
          "label": "Shadow Camera FOV",
          "value": 70,
          "min": 0,
          "max": 1000,
          "step": 10
        },
        {
          "prop1": null,
          "prop2": "castShadow",
          "type": "bool",
          "label": "Cast Shadow",
          "value": false
        },
        {
          "prop1": null,
          "prop2": "showHelper",
          "type": "bool",
          "label": "Show Helper",
          "value": false
        },
        {
          "prop1": null,
          "prop2": "showHelperRuntime",
          "type": "bool",
          "label": "Runtime",
          "value": false
        }
      ]
    },
    {
      "name": "",
      "uuid": "24FE80BD-D192-4E44-BDA9-E770268F49A3",
      "type": "PointLight",
      "lightProps": [
        {
          "prop1": null,
          "prop2": "type",
          "type": "string",
          "label": "Type",
          "value": "PointLight",
          "readOnly": true
        },
        {
          "prop1": null,
          "prop2": "uuid",
          "type": "string",
          "label": "UUID",
          "value": "",
          "readOnly": true
        },
        {
          "prop1": null,
          "prop2": "name",
          "type": "string",
          "label": "name",
          "value": ""
        },
        {
          "prop1": null,
          "prop2": "color",
          "type": "color",
          "label": "Color",
          "value": 13767700
        },
        {
          "prop1": null,
          "prop2": "intensity",
          "type": "number",
          "label": "Intensity",
          "value": 1,
          "min": 0,
          "max": 1,
          "step": 0.05
        },
        {
          "prop1": "position",
          "prop2": "x",
          "type": "number",
          "label": "Position X",
          "min": -1000,
          "max": 1000,
          "value": 0,
          "step": 10
        },
        {
          "prop1": "position",
          "prop2": "y",
          "type": "number",
          "label": "Position Y",
          "min": -1000,
          "max": 1000,
          "value": 100,
          "step": 10
        },
        {
          "prop1": "position",
          "prop2": "z",
          "type": "number",
          "label": "Position Z",
          "min": -1000,
          "max": 1000,
          "value": 0,
          "step": 10
        },
        {
          "prop1": null,
          "prop2": "distance",
          "type": "number",
          "label": "Distance",
          "min": -1000,
          "max": 1000,
          "value": 10,
          "step": 10
        },
        {
          "prop1": null,
          "prop2": "helperSphereSize",
          "type": "number",
          "label": "Helper Size",
          "min": 1,
          "max": 100,
          "value": 5,
          "step": 1
        },
        {
          "prop1": null,
          "prop2": "showHelper",
          "type": "bool",
          "label": "Show Helper",
          "value": false
        },
        {
          "prop1": null,
          "prop2": "showHelperRuntime",
          "type": "bool",
          "label": "Runtime",
          "value": false
        }
      ]
    }
  ],
  "cameraProps": [
    {
      "prop1": null,
      "prop2": "fov",
      "type": "number",
      "label": "FOV",
      "value": 50,
      "min": 1,
      "max": 1000,
      "step": 10
    },
    {
      "prop1": null,
      "prop2": "aspect",
      "type": "number",
      "label": "Aspect",
      "value": 2.1309655937846839,
      "min": 0,
      "max": 100
    },
    {
      "prop1": null,
      "prop2": "near",
      "type": "number",
      "label": "Near",
      "value": 0.1,
      "min": 0,
      "max": 100,
      "step": 0.1
    },
    {
      "prop1": null,
      "prop2": "far",
      "type": "number",
      "label": "Far",
      "value": 10000,
      "min": 0,
      "max": 10000
    },
    {
      "prop1": "position",
      "prop2": "x",
      "type": "number",
      "label": "Position X",
      "min": -1000,
      "max": 1000,
      "value": 200,
      "step": 10
    },
    {
      "prop1": "position",
      "prop2": "y",
      "type": "number",
      "label": "Position Y",
      "min": -1000,
      "max": 1000,
      "value": 200,
      "step": 10
    },
    {
      "prop1": "position",
      "prop2": "z",
      "type": "number",
      "label": "Position Z",
      "min": -1000,
      "max": 1000,
      "value": 200,
      "step": 10
    }
  ],
  "sceneProps": [
    {
      "prop1": "scene",
      "prop2": "useFog",
      "type": "bool",
      "label": "Use Fog",
      "value": false
    },
    {
      "prop1": "scene",
      "prop2": "fogColor",
      "type": "color",
      "label": "Fog Color",
      "value": "#FF0000"
    },
    {
      "prop1": "scene",
      "prop2": "fogMistDensity",
      "type": "number",
      "label": "Fog Mist Density",
      "value": 0.015,
      "min": 0,
      "max": 1,
      "step": 0.001
    },
    {
      "prop1": "axis",
      "prop2": "showAxis",
      "type": "bool",
      "label": "Show Axis",
      "value": false
    },
    {
      "prop1": "axis",
      "prop2": "showAxisRuntime",
      "type": "bool",
      "label": "Runtime",
      "value": true
    },
    {
      "prop1": "axis",
      "prop2": "axisSize",
      "type": "number",
      "label": "Axis Size",
      "value": 1000,
      "min": 1,
      "max": 1000,
      "step": 10
    },
    {
      "prop1": "axis",
      "prop2": "useAxisArrows",
      "type": "bool",
      "label": "Axis Arrows",
      "value": true
    },
    {
      "prop1": "axis",
      "prop2": "axisArrowHeadLength",
      "type": "number",
      "label": "Axis Arrow Head Length",
      "value": 100,
      "min": 1,
      "max": 100,
      "step": 1
    },
    {
      "prop1": "grid",
      "prop2": "showGrid",
      "type": "bool",
      "label": "Show Grid",
      "value": false
    },
    {
      "prop1": "grid",
      "prop2": "showGridRuntime",
      "type": "bool",
      "label": "Runtime",
      "value": true
    },
    {
      "prop1": "grid",
      "prop2": "gridSize",
      "type": "number",
      "label": "Grid Size",
      "value": 2000,
      "min": 1,
      "max": 1000,
      "step": 10
    },
    {
      "prop1": "grid",
      "prop2": "gridDivisions",
      "type": "number",
      "label": "Grid Divisions",
      "value": 100,
      "min": 1,
      "max": 100,
      "step": 1
    },
    {
      "prop1": "grid",
      "prop2": "gridColor",
      "type": "color",
      "label": "Grid Color",
      "value": "#808080"
    },
    {
      "prop1": "grid",
      "prop2": "gridColorCenterLine",
      "type": "color",
      "label": "Grid Color Center Line",
      "value": "#FFFFFF"
    },
    {
      "prop1": "scene",
      "prop2": "backgroundColor",
      "type": "cssColor",
      "label": "Background Color",
      "value": "#1E1E1E"
    }
  ],
  "audioProps": [
    {
      "prop1": null,
      "prop2": "fileName",
      "type": "string",
      "label": "Audio File Name",
      "value": "audio/didgeridoo.wav"
    },
    {
      "prop1": null,
      "prop2": "select",
      "type": "function",
      "label": "Select",
      "value": ""
    },
    {
      "prop1": null,
      "prop2": "play",
      "type": "function",
      "label": "Play",
      "value": true
    },
    {
      "prop1": null,
      "prop2": "pause",
      "type": "function",
      "label": "Pause",
      "value": ""
    },
    {
      "prop1": null,
      "prop2": "autoPlay",
      "type": "bool",
      "label": "Auto Play",
      "value": true
    },
    {
      "prop1": null,
      "prop2": "loop",
      "type": "bool",
      "label": "Loop",
      "value": true
    },
    {
      "prop1": null,
      "prop2": "controls",
      "type": "bool",
      "label": "Controls",
      "value": true
    }
  ],
  "storyText": "Unfortunately many of the answers here address the question of how to put a newline character in the string data. The question is how to make the code look nicer by splitting the string value across multiple lines of code. (And even the answers that recognize this provide solutions that assume one is free to change the data representation, which in many cases one is not.)And the worse news is, there is no good answer.In many programming languages, even if they don't explicitly support splitting strings across lines, you can still use string concatenation to get the desired effect; and as long as the compiler isn't awful this is fine.But json is not a programming language; it's just a data representation. You can't tell it to concatenate strings. Nor does its (fairly small) grammar include any facility for representing a string on multiple lines.Short of devising a pre-processor of some kind (and I, for one, don't feel like effectively making up my own language to solve this issue), there isn't a general solution to this problem. IF you can change the data format, then you can substitute an array of strings. Otherwise, this is one of the numerous ways that json isn't designed for human-readability.This is a really old question, but I came across this on a search and I think I know the source of your problem.JSON does not allow real newlines in its data; it can only have escaped newlines. See the answer from @YOU. According to the question, it looks like you attempted to escape line breaks in Python two ways: by using the line continuation character (\\) or by using \\n as an escape. But keep in mind: if you are using a string in python, special escaped characters (\\t, \\n) are translated into REAL control characters! The \\n will be replaced with the ASCII control character representing a newline character, which is precisely the character that is illegal in JSON. (As for the line continuation character, it simply takes the newline out.) So what you need to do is to prevent Python from escaping characters. You can do this by using a raw string (put r in front of the string, as in  abc\\ndef, or by including an extra slash in front of the newline (abc\\ndef). Both of the above will, instead of replacing \\n with the real newline ASCII control character, will leave \\n as two literal characters, which then JSON can interpret as a newline escape.",
  "additionalContents": [
    {
      "content": "<span class=\"colour\" style=\"color:rgb(227, 33, 128)\"><h1>Intro<br></h1><div><br></div><div><span class=\"colour\" style=\"color:rgb(2, 2, 2)\"><span class=\"size\" style=\"font-size:20px\">\"Aurelia is a JavaScript client framework for mobile, desktop and web leveraging simple conventions and empowering creativity.\"</span></span><br></div><div><br></div><div><span class=\"colour\" style=\"color:rgb(2, 2, 2)\"><span class=\"size\" style=\"font-size:20px\">backed by <a href=\"http://www.bluespire.com\">Blue Spire</a></span></span><br></div><div><br></div><div><span class=\"colour\" style=\"color:rgb(2, 2, 2)\"><span class=\"size\" style=\"font-size:20px\">Features</span></span><br></div><ul><li><span class=\"colour\" style=\"color:rgb(2, 2, 2)\"><span class=\"size\" style=\"font-size:20px\">Components</span></span><br></li><li><span class=\"colour\" style=\"color:rgb(2, 2, 2)\"><span class=\"size\" style=\"font-size:20px\">Web Standards</span></span><br></li><li><span class=\"colour\" style=\"color:rgb(2, 2, 2)\"><span class=\"size\" style=\"font-size:20px\">Extensible</span></span><br></li><li><span class=\"colour\" style=\"color:rgb(2, 2, 2)\"><span class=\"size\" style=\"font-size:20px\">Commercial Support</span></span><br></li><li><span class=\"colour\" style=\"color:rgb(2, 2, 2)\"><span class=\"size\" style=\"font-size:20px\">Licence - MIT</span></span><br></li></ul></span><div><br></div>",
      "css": {
        "position": "absolute",
        "left": "50%",
        "top": "30px",
        "width": "48%",
        "height": "90%",
        "opacity": "1"
      },
      "name": "intro",
      "title": "Intro",
      "showFlag": false
    },
    {
      "content": "<div><h1><span class=\"colour\" style=\"color:rgb(255, 42, 147)\">Data binding</span><br></h1></div><div><br></div><div><span class=\"size\" style=\"font-size:20px\"><b>${...}</b> and property.<b>bind</b></span><br></div><div><br></div><div><span class=\"highlight\" style=\"background-color:rgb(252, 252, 252)\"><span class=\"colour\" style=\"color:rgb(167, 29, 93)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\"><span class=\"colour\" style=\"color:rgb(167, 29, 93)\"><span class=\"colour\" style=\"color:rgb(51, 51, 51)\">&lt;</span>div</span><span class=\"colour\" style=\"color:rgb(51, 51, 51)\">&gt;</span></span></span></span><span class=\"colour\" style=\"color:rgb(51, 51, 51)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\">${customer.fullName}</span></span></span><span class=\"colour\" style=\"color:rgb(167, 29, 93)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\"><span class=\"colour\" style=\"color:rgb(167, 29, 93)\"><span class=\"colour\" style=\"color:rgb(51, 51, 51)\">&lt;/</span>div</span><span class=\"colour\" style=\"color:rgb(51, 51, 51)\">&gt;</span></span></span></span></span><br></div><div><span class=\"highlight\" style=\"background-color:rgb(252, 252, 252)\"><span class=\"colour\" style=\"color:rgb(167, 29, 93)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\"><span class=\"colour\" style=\"color:rgb(51, 51, 51)\">&lt;</span>input </span></span></span><span class=\"colour\" style=\"color:rgb(24, 54, 145)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\">type</span></span></span><span class=\"colour\" style=\"color:rgb(0, 134, 179)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\"><span class=\"colour\" style=\"color:rgb(51, 51, 51)\">=\"</span>text<span class=\"colour\" style=\"color:rgb(51, 51, 51)\">\"</span></span></span></span><span class=\"colour\" style=\"color:rgb(167, 29, 93)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\"> </span></span></span><span class=\"colour\" style=\"color:rgb(24, 54, 145)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\">value</span></span></span><span class=\"colour\" style=\"color:rgb(167, 29, 93)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\">.</span></span></span><span class=\"colour\" style=\"color:rgb(24, 54, 145)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\">bind</span></span></span><span class=\"colour\" style=\"color:rgb(0, 134, 179)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\"><span class=\"colour\" style=\"color:rgb(51, 51, 51)\">=\"</span>firstName<span class=\"colour\" style=\"color:rgb(51, 51, 51)\">\"</span></span></span></span><span class=\"colour\" style=\"color:rgb(51, 51, 51)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\">&gt;</span></span></span></span><br></div><div><br></div><div><span class=\"size\" style=\"font-size:20px\">Binding behaviours</span><br></div><div><br></div><ul><li><span class=\"size\" style=\"font-size:20px\">throttle</span><br></li><li><span class=\"size\" style=\"font-size:20px\">debounce</span><br></li><li><span class=\"size\" style=\"font-size:20px\">one-way</span><br></li><li><span class=\"size\" style=\"font-size:20px\">two-way</span><br></li><li><span class=\"size\" style=\"font-size:20px\">one-time</span><br></li><li><span class=\"size\" style=\"font-size:20px\">repeat.for</span><br></li><li><span class=\"size\" style=\"font-size:20px\">if.bind</span><br></li><li><span class=\"size\" style=\"font-size:20px\">show.bind</span><br></li><li><span class=\"size\" style=\"font-size:20px\">css.bind</span><br></li><li><span class=\"size\" style=\"font-size:20px\">class.bind</span><br></li><li><span class=\"size\" style=\"font-size:20px\">innerHTML - sanitizeHTML</span><br></li></ul><div><br></div><div><span class=\"size\" style=\"font-size:20px\">Refs - reference to a HTML element, component or component parts</span><br></div><div><br></div><div><span class=\"highlight\" style=\"background-color:rgb(252, 252, 252)\"><span class=\"colour\" style=\"color:rgb(167, 29, 93)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\"><span class=\"colour\" style=\"color:rgb(167, 29, 93)\"><span class=\"colour\" style=\"color:rgb(51, 51, 51)\">&lt;</span>input</span> <span class=\"colour\" style=\"color:rgb(24, 54, 145)\">type</span><span class=\"colour\" style=\"color:rgb(0, 134, 179)\"><span class=\"colour\" style=\"color:rgb(51, 51, 51)\">=\"</span>text<span class=\"colour\" style=\"color:rgb(51, 51, 51)\">\"</span></span> <span class=\"colour\" style=\"color:rgb(24, 54, 145)\">ref</span><span class=\"colour\" style=\"color:rgb(0, 134, 179)\"><span class=\"colour\" style=\"color:rgb(51, 51, 51)\">=\"</span>txt<span class=\"colour\" style=\"color:rgb(51, 51, 51)\">\"</span></span><span class=\"colour\" style=\"color:rgb(51, 51, 51)\">&gt;</span></span></span></span><span class=\"colour\" style=\"color:rgb(51, 51, 51)\"><span class=\"font\" style=\"font-family:Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace\"><span class=\"size\" style=\"font-size:14.45px\"> ${name.value}</span></span></span></span><br></div><div><br></div><div><span class=\"colour\" style=\"color:rgb(24, 54, 145)\">private</span>&nbsp;txt: <span class=\"colour\" style=\"color:rgb(255, 0, 0)\">HTMLInputElement</span>;<br></div><div><br></div>",
      "css": {
        "position": "absolute",
        "left": "50%",
        "top": "30px",
        "width": "48%",
        "height": "90%",
        "opacity": "1"
      },
      "name": "data-binding",
      "title": "Data binding",
      "showFlag": true
    }
  ]
}