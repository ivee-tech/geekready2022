# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

parameters:
  - name: tag
    type: string
    default: '0.0.1'
trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'zzacr'
  imageRepository: 'geekready2022/hello-geekready-2022'
  containerRegistry: 'zzacr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: ${{ parameters.tag }} # '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        docker run -it -v /var/run/docker.sock:/var/run/docker.sock \
          -v $(Pipeline.Workspace)/s/code/app:/app/myapp daradu/trivy:0.34.0 \
          -v $(Pipeline.Workspace)/a/results:/app/results \
          config ./myapp --format template --template @contrib/junit.tpl --output ./results/config-results.xml
      displayName: Scan config
    - task: Docker@2
      displayName: Login to container registry
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnection)
    - task: Docker@2
      displayName: Build image
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        tags: |
          $(tag)
    - script: |
        docker run -it -v /var/run/docker.sock:/var/run/docker.sock \
          -v $(Pipeline.Workspace)/s/code/app:/app/myapp daradu/trivy:0.34.0 \
          -v $(Pipeline.Workspace)/a/results:/app/results \
          image $(imageRepository):$(tag) --format template --template @contrib/junit.tpl --output ./results/image-results.xml
      displayName: Scan image
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/*-results.xml'    
